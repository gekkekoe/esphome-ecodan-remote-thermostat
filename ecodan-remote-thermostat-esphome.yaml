substitutions:
  name: ecodan-thermostat
  friendlyName: Ecodan thermostat

# enable ota update via http request
http_request:
  buffer_size_tx: 20248

ota:
  - platform: esphome
  - platform: http_request
#  password: !secret heatpump_ota_password

api:
  reboot_timeout: 0s
#  encryption:
#    key: !secret heatpump_encryption_key

# external_components:
# - source:
#     type: local
#     path: components
#   components: [ ecodan ]

# packages:
#  esp32: !include confs/esp32s3.yaml
# # change language labels to -en for English or -nl for Dutch
#  substitutions: !include confs/ecodan-labels-en.yaml
#  dbg: !include confs/debug.yaml
#  wifi: !include confs/wifi.yaml

# # up to 8 thermostats can be defined. 0-7.
#  thermostat-room-0: !include { file: confs/thermostat-room.yaml, vars: { room_identifier: 0, room_name: "Room 1" } }
#  thermostat-room-1: !include { file: confs/thermostat-room.yaml, vars: { room_identifier: 1, room_name: "Room 2" } }

external_components:
  - source: github://gekkekoe/esphome-ecodan-remote-thermostat@main
    components: [ ecodan ]
    refresh: always

packages:
# up to 8 thermostats can be defined. 0-7.
  thermostat-room-0: !include { file: confs/thermostat-room.yaml, vars: { room_identifier: 0, room_name: "Room 1" } }
  #thermostat-room-1: !include { file: confs/thermostat-room.yaml, vars: { room_identifier: 1, room_name: "Room 2" } }
  remote_package:
    url: https://github.com/gekkekoe/esphome-ecodan-remote-thermostat
    ref: main
    refresh: always
    files: [ 
            confs/esp32s3.yaml,
            #confs/esp32s3-led.yaml,    # atom s3 status leds
            ## enable label language file
            confs/ecodan-labels-en.yaml,
            #confs/ecodan-labels-nl.yaml,
            #confs/ecodan-labels-it.yaml,
            #confs/ecodan-labels-fr.yaml,
            #confs/debug.yaml,
            confs/wifi.yaml,
           ]

# enable logger
logger:
  baud_rate: 115200
  logs:
    esp32.preferences: DEBUG
    sensor: DEBUG
    text_sensor: DEBUG
    binary_sensor: DEBUG
    switch: DEBUG
    button: DEBUG
    number: DEBUG
    climate: DEBUG
    component: DEBUG
    ecodan.component: DEBUG

# Enable Web server.
web_server:
  port: 80
  #ota: true

ecodan:
  id: ecodan_instance
  uart_id: uart_ecodan

